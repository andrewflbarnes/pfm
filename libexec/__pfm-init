#!/usr/bin/env bash

# META-HELP:2:initialise pfm in the current shell

__pfm-init() {
    if [[ "$1" != "init" ]]
    then
        echo "Must be run as \`pfm init'" >&2
        return 1
    fi
    shift

    local shell=$1

    if [ -z "$shell" ]
    then
        echo "Run the below in your shell and add it your shell rc file."
        # shellcheck disable=SC2016
        echo 'eval "$(pfm init <shell>)"'
        return
    fi

    if [ -z "$PFM_LIBEXEC" ]
    then
        echo "pfm exec path unset - make sure you are using \`pfm init'" >&2
        return 2
    fi
    
    case "$shell" in
        bash|zsh|sh)
            echo "# exports supported by $shell"
            echo "export PFM_HOME=\"$PFM_HOME\""
            echo "export PFM_BIN=\"$PFM_BIN\""
            echo "export PFM_LIBEXEC=\"$PFM_LIBEXEC\""
            echo "export PFM_SESSIONS=\"$PFM_SESSIONS\""
            echo "PFM_SHELL=$shell"
            echo "PFM_SHELL_INIT=1"
            ;;
        *)
            echo "# exports not yet supported by $shell"
            ;;
    esac

    case "$shell" in
        bash)
            echo "# function shell caching supported by $shell"
            (
                shopt -s nullglob
                local f
                for f in "$PFM_LIBEXEC"/*
                do
                    \grep -Ehv "^\s*(:;|#)" "$f"
                done
            )
            ;;
        *)
            echo "# function shell caching not yet supported by $shell"
            ;;
    esac

    local folder
    for folder in "$PFM_HOME" "$PFM_SESSIONS"
    do
        if ! mkdir -p "$folder"
        then
            echo "Cannot create folder \"$folder\"" >&2
            return 4
        fi
    done
}

# shellcheck disable=SC2016
:; __pfm-init "$@"
