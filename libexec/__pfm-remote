#!/usr/bin/env bash

# META-HELP:6:forward a remote port to a local port

__pfm-remote() {
    if [[ "$1" != "remote" ]]
    then
        echo "Must be run as \`pfm remote'" >&2
        return 1
    fi
    shift

    if [[ "$1" == "completion" ]]
    then
      # TODO
      return
    fi

    local ssh_host=$1
    local ssh_port=$2
    local forward_host=$3
    local forward_port=$4

    if [ -z "$3" ]
    then
        forward_host=localhost
        forward_port=$ssh_port
    elif [ -z "$4" ]
    then
        forward_host=localhost
        forward_port=$3
    fi
    
    if [ -z "$forward_port" ]
    then
        echo "Usage: pfm remote <ssh host> <ssh port> { <local port> | <forward host> <forward port> }" >&2
        return 2
    fi

    local session_file="$PFM_SESSIONS/${ssh_host}=remote=${ssh_port}=${forward_host}=${forward_port}"
    local session_socket; session_socket="$PFM_SESSIONS/.r.$(cksum <<< "$session_file" | cut -f 1 -d ' ')"
    if [ -e "$session_file" ] || [ -e "$session_socket" ]
    then
        echo "Session already exists for $ssh_host:$ssh_port -> localhost -> $forward_host:$forward_port" >&2
        return 3
    fi

    # create the link first as this is what we use to check for existing sessions and connection attempts
    if ! ln -s "$session_socket" "$session_file"
    then
        echo "Failed to link unix socket for remote port $ssh_host:$ssh_port -> localhost -> $forward_host:$forward_port" >&2
        [[ 1 == "$PFM_NOCLEANUP" ]] || __pfm-stop stop - "$session_file" || :
        return 6
    fi

    if ! ssh -M -S "$session_socket" -fnNT "$ssh_host"
    then
        echo "Failed to establish connection to $ssh_host" >&2
        [[ 1 == "$PFM_NOCLEANUP" ]] || __pfm-stop stop - "$session_file" || :
        return 4
    fi

    if ! ssh -S "$session_socket" -O forward -R "$ssh_port:$forward_host:$forward_port" "$ssh_host"
    then
        echo "Failed to forward remote port $ssh_host:$ssh_port -> localhost -> $forward_host:$forward_port" >&2
        [[ 1 == "$PFM_NOCLEANUP" ]] || __pfm-stop stop - "$session_file" || :
        return 5
    fi
}

:; __pfm-remote "$@"
