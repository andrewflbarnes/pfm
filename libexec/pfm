#!/usr/bin/env bash

:; export PS4_PADDING="                                "
:; export PS4='+ $(basename "${BASH_SOURCE[0]}"):${FUNCNAME[0]}:$LINENO ${PS4_PADDING:0:((${#PS4_PADDING}-${#FUNCNAME[0]}-${#LINENO}-$(basename "${BASH_SOURCE[0]}" | wc -c)-1))} '
:; [[ "$PFM_DEBUG" == 1 ]] && set -x

:; export PFM_HOME; PFM_HOME="${PFM_HOME:-$HOME/.pfm}"
:; export PFM_SESSIONS; PFM_SESSIONS="${PFM_SESSIONS:-$PFM_HOME/sessions}"
:; mkdir -p "$PFM_SESSIONS"

# Ignore symlinks etc. for PFM_BIN so we know the actual callpoint
:; export PFM_BIN; PFM_BIN=$(cd "$(dirname "$0")" && pwd) || { echo "Cannot resolve pfm bin path from \"$0\"" >&2; exit 1; }
:; export PFM_LIBEXEC; PFM_LIBEXEC=$(realpath "$(dirname "$PFM_BIN")"/libexec) || { echo "Cannot resolve pfm libexec path from \"$0\"" >&2; exit 1; }
:; export PATH="$PFM_LIBEXEC:$PATH"
:; export SHELLOPTS

# The below acts as a marker so we can detect shell vs file invocations
:; export PFM_FILE_EXEC=1

pfm() {
    if [[ "$PFM_DEBUG" == 1 ]]
    then
        trap "set +x; trap - RETURN INT TERM EXIT" RETURN INT TERM EXIT
        set -x
        PS4_PADDING="                                " \
        PS4='+ $(basename "${BASH_SOURCE[0]}"):${FUNCNAME[0]}:$LINENO ${PS4_PADDING:0:((${#PS4_PADDING}-${#FUNCNAME[0]}-${#LINENO}-$(basename "${BASH_SOURCE[0]}" | wc -c)-1))} ' \
        PFM_DEBUG=${PFM_DEBUG} \
        __pfm_run "$@"
    else
        __pfm_run "$@"
    fi
}

__pfm_run() {
    local cmd=${1:-help}
    local full_cmd="__pfm-${cmd}"
    if [[ "$cmd" =~ _ ]] || ! type -t "$full_cmd" &>/dev/null
    then
        echo "Unrecognised command: $cmd" >&2
        return 1
    fi

    "$full_cmd" "$@"
}

# Utility function which will force commands to always defer to the libexec file
# mainly useful for completions and initialisations which would otherwise require
# calling twice - once to get the updated init/comp in the shell function, and a
# second to emit/eval it
__pfm_run_file() {
    # Only if we are running from a shell
    if [ "$PFM_SHELL_INIT" != "1" ]
    then
      echo "Warning: Force file command called in non-initialised shell pfm $*" >&2
    fi
    command pfm "$@"
}

:; pfm "$@"
