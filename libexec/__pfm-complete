#!/usr/bin/env bash

__pfm-complete() {
  if [[ "$1" != "complete" ]]
  then
      echo "Must be run as \`pfm complete'" >&2
      return 1
  fi
  shift

  if  [[ "$1" == "completion" ]]
  then

    if [ $# -lt 3 ]
    then
      local cmd
      for cmd in "-" "bash"
      do
        if [ -z "$2" ] || [[ "$cmd" =~ ^$2 ]]
        then
          printf "%s " "$cmd"
        fi
      done
    fi
    return
  fi

  if [ -z "$1" ]
  then
    echo "Add completion to bash shells by running the below. pfm init will"
    echo "automatically do this as required"
    # shellcheck disable=SC2016
    echo 'eval "$(pfm complete bash)"'
    return
  fi

  ## TODO We always need to init this file from the file, otherwise we have to init twice to pick up changes
  if [[ "bash" == "$1" ]]
  then
    # shellcheck disable=SC2016
    echo '_pfm() { COMPREPLY=($(pfm complete -)); }'
    echo 'complete -F _pfm pfm'
    return
  fi

  if [[ "-" != "$1" ]]
  then
    echo "Unknown completion operation: $1" >&2
    return 1
  fi
  shift 1

  local words cword
  _get_comp_words_by_ref -n "=" words cur cword;

  local search=${words[1]}

  if [ "$cword" -lt 2 ]
  then
    (
      shopt -s nullglob
      \cd "$PFM_LIBEXEC" || return 1
      local cmd
      for cmd in "__pfm-${search}"*
      do
        printf "%s " "${cmd//__pfm-/}"
      done
    )
    return
  fi

  if ! [ -f "$PFM_LIBEXEC/__pfm-$search" ]
  then
    return 1
  fi

  pfm "$search" completion 2>/dev/null || return 1
}

:; __pfm-complete "$@"
