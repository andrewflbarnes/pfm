#!/usr/bin/env bash

# META-HELP:5:list active local and remote sessions

__pfm-list() {
    if [[ "$1" != "list" ]]
    then
        echo "Must be run as \`pfm list'" >&2
        return 1
    fi
    shift

    local verbose=0
    case "$1" in
        -v|--verbose|verbose|v)
            verbose=1
            shift
            ;;
    esac

    \cd "$PFM_SESSIONS" || return $?
    (
        local last_hosttype
        shopt -s nullglob
        local s
        for s in "$PFM_SESSIONS"/*
        do
            local s_real=$(realpath "$s")
            local state="Connected   "
            if ! [ -e "$s_real" ] && [ -L "$s" ]
            then
                state="Disconnected"
            elif ! [ -S "$s_real" ]
            then
                state="NotSocket   "
            elif ! ssh -S "$s_real" -O check "" &>/dev/null
            then
                state="Disconnected"
            fi

            local fname; fname=$(basename "$s")
            read -r ssh_host ftype from_port to_host to_port <<< "${fname//=/ }"
            if [[ "$last_hosttype" != "${ssh_host}[$ftype]" ]]
            then
                last_hosttype="${ssh_host}[$ftype]"
                echo "$last_hosttype"
            fi

            echo -n "$state : "
            if [[ "$ftype" == "local" ]]
            then
                case "$to_host" in
                    localhost|127.0.0.1|::1)
                        echo "localhost:$from_port -> $ssh_host:$to_port"
                        ;;
                    *)
                        echo "localhost:$from_port -> $ssh_host -> $to_host:$to_port"
                        ;;
                esac
            else
                case "$to_host" in
                    localhost|127.0.0.1|::1)
                        echo "$ssh_host:$from_port -> localhost:$to_port"
                        ;;
                    *)
                        echo "$ssh_host:$from_port -> localhost -> $to_host:$to_port"
                        ;;
                esac
            fi
            echo "             > $s"
            echo "             > $(realpath "$s")"
        done
    )
    return $?
}


:; __pfm-list "$@"
